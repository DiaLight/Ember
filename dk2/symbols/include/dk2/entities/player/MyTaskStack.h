// ---------------  id: Player_TaskStack  ----------------  /* auto */
// ----  warning: file is managed by gen_struct_h.py  ----  /* auto */
// ---  you can edit code only in *_user_code blocks  ----  /* auto */
// -------------------------------------------------------  /* auto */
#ifndef MY_TASK_STACK_H  // ------------------------------  /* auto */
#define MY_TASK_STACK_H  // ------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
#include <cstdint>  // -----------------------------------  /* auto */
#include <cstdio>  // ------------------------------------  /* auto */
#include <dinput.h>  // ----------------------------------  /* auto */
#include <dsound.h>  // ----------------------------------  /* auto */
#include <ddraw.h>  // -----------------------------------  /* auto */
#include <d3d.h>  // -------------------------------------  /* auto */
#include <dk2/entities/player/MyTask.h>  // --------------  /* auto */
// -------------------------------------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
  struct MyTaskStack;  // --------------------------------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: head_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
#pragma pack(push, 1)  // --------------------------------  /* auto */
struct MyTaskStack {  // ---------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*  0*/ MyTask tasks[500];  // ---------------------------  /* auto */
/*4650*/ uint16_t numberOfFreeTasks;  // -----------------  /* auto */
/*4652*/ uint16_t nextUniqueId;  // ----------------------  /* auto */
/*4654*/ uint16_t freeListHead;  // ----------------------  /* auto */
/*4656*/ uint16_t taskListHead[17];  // ------------------  /* auto */
/*4678*/ uint16_t numberInTaskList[17];  // --------------  /* auto */
/*469A*/ uint8_t opened;  // -----------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*00507A50*/ MyTaskStack *constructor();  // -------------  /* auto */
/*00507A80*/ int32_t open();  // -------------------------  /* auto */
/*00507AA0*/ void destructor();  // ----------------------  /* auto */
/*00507AB0*/ int32_t init();  // -------------------------  /* auto */
/*00507BB0*/ int32_t fun_507BB0(uint8_t, uint16_t *, uint16_t *);  /* auto */
/*00508110*/ uint16_t fun_508110(uint16_t, uint16_t, uint16_t);  /* auto */
/*00508160*/ int32_t fun_508160(uint16_t, __int16, __int16, __int16);  /* auto */
/*005081C0*/ int32_t fun_5081C0(uint16_t, char *);  // ---  /* auto */
/*00508200*/ int32_t fun_508200(uint8_t, uint16_t *, uint16_t *);  /* auto */
/*00508300*/ int32_t calcChecksum();  // -----------------  /* auto */
/*005083B0*/ void dump();  // ----------------------------  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: body_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
};  // ---------------------------------------------------  /* auto */
#pragma pack(pop)  // ------------------------------------  /* auto */
static_assert(sizeof(MyTaskStack) == 0x469B);  // --------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// ---------------  block: tail_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
#endif //MY_TASK_STACK_H  --------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
