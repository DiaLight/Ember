// -----------------  id: vtbl_0066DB7C  -----------------  /* auto */
// ----  warning: file is managed by gen_struct_h.py  ----  /* auto */
// ---  you can edit code only in *_user_code blocks  ----  /* auto */
// -------------------------------------------------------  /* auto */
#ifndef C_ROOM_H  // -------------------------------------  /* auto */
#define C_ROOM_H  // -------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
#include <cstdint>  // -----------------------------------  /* auto */
#include <cstdio>  // ------------------------------------  /* auto */
#include <dinput.h>  // ----------------------------------  /* auto */
#include <ddraw.h>  // -----------------------------------  /* auto */
#include <d3d.h>  // -------------------------------------  /* auto */
#include <dk2/CTag.h>  // --------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
  struct CRoom;  // --------------------------------------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: head_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
#pragma pack(push, 1)  // --------------------------------  /* auto */
struct CRoom : CTag {  // --------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*  6*/ __int16 f6;  // ----------------------------------  /* auto */
/*  8*/ __int16 f8;  // ----------------------------------  /* auto */
/*  A*/ __int16 fA;  // ----------------------------------  /* auto */
/*  C*/ __int16 fC;  // ----------------------------------  /* auto */
/*  E*/ __int16 fE;  // ----------------------------------  /* auto */
/* 10*/ __int16 f10;  // ---------------------------------  /* auto */
/* 12*/ __int16 f12;  // ---------------------------------  /* auto */
/* 14*/ int8_t gap_14[4];  // ----------------------------  /* auto */
/* 18*/ char f18;  // ------------------------------------  /* auto */
/* 19*/ int8_t gap_19[4];  // ----------------------------  /* auto */
/* 1D*/ __int16 f1D;  // ---------------------------------  /* auto */
/* 1F*/ __int16 f1F;  // ---------------------------------  /* auto */
/* 21*/ __int16 f21;  // ---------------------------------  /* auto */
/* 23*/ __int16 f23;  // ---------------------------------  /* auto */
/* 25*/ __int16 f25;  // ---------------------------------  /* auto */
/* 27*/ int8_t gap_27[6];  // ----------------------------  /* auto */
/* 2D*/ char f2D;  // ------------------------------------  /* auto */
/* 2E*/ char f2E;  // ------------------------------------  /* auto */
/* 2F*/ char f2F;  // ------------------------------------  /* auto */
/* 30*/ char f30;  // ------------------------------------  /* auto */
/* 31*/ int8_t gap_31[118];  // --------------------------  /* auto */
/* A7*/ __int16 fA7;  // ---------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*0066DB7C*/ static void **vftable();  // ----------------  /* auto */
/*---*/ // super CTag  -----------------------------------  /* auto */
/*  0*/ // virtual void *v_deleting_destructor(char);  // = 004EC130  /* auto */
/*  4*/ // virtual BOOL v_f4(void **);  // = 004E3B10  ---  /* auto */
/*---*/ // CRoom  ----------------------------------------  /* auto */
/*  8*/ virtual wchar_t *v_fun_4E9250(wchar_t *);  // = 004E9250  /* auto */
// -------------------------------------------------------  /* auto */
/*004E3790*/ void constructor();  // ---------------------  /* auto */
/*004E37F0*/ void destructor();  // ----------------------  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: body_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
};  // ---------------------------------------------------  /* auto */
#pragma pack(pop)  // ------------------------------------  /* auto */
static_assert(sizeof(CRoom) == 0xA9);  // ----------------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// ---------------  block: tail_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
#endif //C_ROOM_H  ---------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
