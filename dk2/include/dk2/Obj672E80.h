// -----------------  id: vtbl_00672E80  -----------------  /* auto */
// ----  warning: file is managed by gen_struct_h.py  ----  /* auto */
// ---  you can edit code only in *_user_code blocks  ----  /* auto */
// -------------------------------------------------------  /* auto */
#ifndef OBJ672_E80_H  // ---------------------------------  /* auto */
#define OBJ672_E80_H  // ---------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
#include <cstdint>  // -----------------------------------  /* auto */
#include <cstdio>  // ------------------------------------  /* auto */
#include <dinput.h>  // ----------------------------------  /* auto */
#include <ddraw.h>  // -----------------------------------  /* auto */
#include <d3d.h>  // -------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
  struct MySurfDesc;  // ---------------------------------  /* auto */
  struct Obj672E80;  // ----------------------------------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: head_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
namespace dk2 {  // --------------------------------------  /* auto */
#pragma pack(push, 1)  // --------------------------------  /* auto */
struct Obj672E80 {  // -----------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*  4*/ int32_t f4;  // ----------------------------------  /* auto */
/*  8*/ int32_t dst_dwRGBAlphaBitMask;  // ---------------  /* auto */
/*  C*/ int32_t fC;  // ----------------------------------  /* auto */
/* 10*/ int32_t f10;  // ---------------------------------  /* auto */
/* 14*/ int32_t f14;  // ---------------------------------  /* auto */
/* 18*/ int32_t f18;  // ---------------------------------  /* auto */
/* 1C*/ int32_t f1C;  // ---------------------------------  /* auto */
/* 20*/ int32_t f20;  // ---------------------------------  /* auto */
/* 24*/ int32_t f24;  // ---------------------------------  /* auto */
/* 28*/ int32_t f28;  // ---------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
/*00672E80*/ static void **vftable();  // ----------------  /* auto */
/*---*/ // Obj672E80  ------------------------------------  /* auto */
/*  0*/ virtual void *v_Obj672E80_scalar_destructor(char);  // = 005FD800  /* auto */
/*  4*/ virtual int32_t v_Obj672E80_convertPixel(int32_t *, int8_t *, int32_t);  // = 005FDAE0  /* auto */
/*  8*/ virtual void v_nullsub_23(int32_t, int32_t, int32_t);  // = 00510E60  /* auto */
// -------------------------------------------------------  /* auto */
/*005FD7B0*/ Obj672E80 *constructor(MySurfDesc *, MySurfDesc *);  /* auto */
/*005FD830*/ char init(MySurfDesc *, MySurfDesc *);  // --  /* auto */
/*005FDAE0*/ int32_t convertPixel(int32_t *, int8_t *, int32_t);  /* auto */
// -------------------------------------------------------  /* auto */
// ---------------  block: body_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
};  // ---------------------------------------------------  /* auto */
#pragma pack(pop)  // ------------------------------------  /* auto */
static_assert(sizeof(Obj672E80) == 0x2C);  // ------------  /* auto */
}  // namespace dk2  -------------------------------------  /* auto */
// ---------------  block: tail_user_code  ---------------  /* auto */

// user code

// ---------------  end_of_block  ------------------------  /* auto */
#endif //OBJ672_E80_H  -----------------------------------  /* auto */
// -------------------------------------------------------  /* auto */
